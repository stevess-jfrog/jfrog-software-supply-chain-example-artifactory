name: Build (Dependencies Resolution) / Store Binaries / Push Build Info / Scan Binaries / Store and sign RB

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            name=https://strategicus.jfrog.io/jfrog-software-supply-chain-example-artifactory          
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha            

      - name: Set up QEMU üèóÔ∏è
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx üêã
        uses: docker/setup-buildx-action@v3

      - name: Login to JFrog CLI   
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      - run: |
          export SERVER_ID="strategicus"
          jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false

      - name: Build and push üê≥
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          build-args: UBI_VERSION=latest
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push build info 
        uses: jfrog/setup-jfrog-cli@v3
      - run: |
          jfrog rt docker-push $JF_URL/docker-local/jfrog-software-supply-chain-example-artifactory:latest docker-local --build-name=jfrog-software-supply-chain-example-artifactory --build-number=1.0.0
          jfrog rt bp jfrog-software-supply-chain-example-artifactory 1.0.0